spring:
  mvc:
    date-format: yyyy-MM-dd HH:mm:ss
  jackson:
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    date-format: yyyy-MM-dd HH:mm:ss
  cache:
    cache-names: mdc-cache
  datasource:
    url: jdbc:mysql://paascloud-db-mysql:3306/jemmycloud_mdc?characterEncoding=utf8&useSSL=false

liquibase:
  change-log: classpath:liquibase/index.xml
  user: ${spring.datasource.username}
  password: ${spring.datasource.password}
  url: ${spring.datasource.url}

mybatis:
  type-aliases-package: com.jemmy.services.product.model.domain
  mapper-locations: classpath:mybatis_mappers/*.xml,classpath*:sdk/mybatis_mappers/*.xml
  configuration:
    map-underscore-to-camel-case: true

mapper:
  mappers: com.paascloud.core.mybatis.MyMapper
  not-empty: false
  identity: MYSQL

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

security:
  oauth2:
    client:
      clientId: client-service-product
      clientSecret: oauth2ClientSecret
      access-token-uri: http://paascloud-gateway:7030/uac/oauth/token
      user-authorization-uri: http://paascloud-gateway:7030/uac/oauth/authorize
    resource:
      user-info-uri: http://paascloud-gateway:7030/uac/user
      prefer-token-info: false
      jwt:
        key-uri: http://paascloud-provider-uac:7020/oauth/token_key

jemmycloud:
  enableSqlLogInterceptor: false
  dingTalk:
    webhookToken:
      sendException: 8b72748be0e91ccb98635137ef05df384c22827e3541b35f4bba83175b4fd09c
      jobListener: 7b0fcc73f3d2be1415c5d31e5b34100c689961454af15a61635749ba0d8*****
  token:
    interceptor:
      enable: true
  zk:
    zkAddressList: paascloud-provider-zk:2181
  aliyun:
    rocketMq:
      enable: false
      reliableMessageConsumer: false
      reliableMessageProducer: true
      namesrvAddr: paascloud-mq-rocket:9876
      instanceName: service-product
      consumerGroup: CID_MDC
      producerGroup: PID_MDC
  oauth2:
    jwtSigningKey: jemmycloud
    client:
      id: ${security.oauth2.resource.id}
      accessTokenUrl: ${security.oauth2.client.access-token-uri}
      clientId: ${security.oauth2.client.clientId}
      clientSecret: ${security.oauth2.client.clientSecret}
      clientAuthenticationScheme: header
      tokenStore: jwt